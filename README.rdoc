= Intercession

This fork is Rails 3.0.3 compatible

* http://github.com/jbarnette/intercession

== Description

Treat your sessions like models, not hashes. Intercession mixes a module into
the session on each request, allowing you to nicely encapsulate (and test!)
lots of user and session-specific behavior.

== Examples

Check out this gist: http://gist.github.com/44506

Unit tests for your session model! Mix it in to a Hash and go to town:

    def setup
      @session = Hash.new
      @session.extend Transient::Session
    end

    def test_session_user_lazily_loads_from_user_id
      assert_nil @session.user
      @session[:user_id] = users(:default).id
      assert_equal users(:default), @session.user
    end

== Installation

I've used Intercession with Rails v2.2.2 and v2.3.4. Anything else
might give you hives.

Intercession works as a plugin or a gem. If you install it as a
plugin, it'll create you a stub session module in
<tt>app/models/transient/session.rb</tt>. If you're using it as a gem,
do it yourself. :)

As a plugin:

    $ script/plugin install git://github.com/jbarnette/intercession.git

As a gem (preferred):

    $ gem install intercession

If you're using Intercession as a gem, add it to your app's gem
dependency mechanism.

After installation, add <tt>include Intercession</tt> to your
ApplicationController. To enable Intercession in your tests, call
<tt>Intercession.test!</tt> in your <tt>test_helper.rb</tt>.

== License

Copyright 2009 John Barnette (jbarnette@rubyforge.org)

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
